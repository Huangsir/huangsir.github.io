<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[huangsir]]></title><description><![CDATA[huangsir's blog]]></description><link>http://ruibo.me</link><generator>RSS for Node</generator><lastBuildDate>Thu, 26 Oct 2017 13:25:42 GMT</lastBuildDate><atom:link href="http:/ruibo.me/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Thu, 26 Oct 2017 13:25:41 GMT</pubDate><item><title><![CDATA[给手机换个电池]]></title><description><![CDATA[<hr>
<p>datetime: 2014-05-15 21:09:32</p>
<hr>
<p>事情的起因是这样的，老夫的极阳铝壳宏碁笔记本的电源坏了，是的全公司这么多人居然只有我一个人的坏了=。=#  </p>
<p>于是周六的时候去找维修点维修，从早上11点出发，一直到下午3点找到，一共给手机充了3次电=。=# 没错，就是老夫的四碍事。  </p>
<p>正在踌躇这件事一路走回公司的路上，涛妈妈居然说他的手机也不行了，买了块电池准备换上的途中，居然把手机拆！坏！了！=。=#  </p>
<p>扣电池的两颗螺丝，其中的一颗被拧滑口了，这得有多暴力才能拧滑口=。=#  </p>
<p>百般尝试无果之后，涛妈妈忍痛把电池出让，贼哈哈哈哈，真是便宜了老夫了。  </p>
<p>之后，之后，在老夫成功把屁股撬开后，电池的链接部分，居然没！有！螺！丝！=。=# 同学我确定我买的是行货，官网买的 =。=#  </p>
<p>好吧，没螺丝也没关系，本身电池连接片就是有卡口的~  </p>
<p>就这样简单的把电池换上了，涛妈妈不知道是不是很不爽贼哈哈哈哈~  </p>
<p>什么，没图？markdown上图很麻烦哟，再说自己能拍到自己的屁股么？</p>
]]></description><link>http:/ruibo.me/posts/268758756.html</link><guid isPermaLink="true">http:/ruibo.me/posts/268758756.html</guid><dc:creator><![CDATA[Huangsir]]></dc:creator><pubDate>Thu, 26 Oct 2017 13:25:27 GMT</pubDate></item><item><title><![CDATA[初尝hhvm]]></title><description><![CDATA[<hr>
<p>datetime: 2014-04-03 02:34:09</p>
<hr>
<p>hhvm和phc在前两年已经略有耳闻，但是一直没有真正加入到我们的生产环境中。  </p>
<p>最近因为hhvm过于好评如潮，终于又对她产生了墙裂的兴趣。故下手测试了一番。  </p>
<pre><code>git clone https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;hhvm</code></pre><p>把hhvm载下来后，就可以直接编译了。（老夫的机器变异环境良好~）</p>
<p>.....两个小时后-_-|||.....</p>
<p>就可以直接使用啦~~</p>
<p>如何测试呢，上网找了一个身份证校验的函数。这样的数学计算应该就足够测试了，不是HelloWorld测试哟。  </p>
<p>代码如下：</p>
<pre><code>&lt;?php
function validation_filter_id_card($id_card){
    if(strlen($id_card)&#x3D;&#x3D;18){
        return idcard_checksum18($id_card);
    }elseif((strlen($id_card)&#x3D;&#x3D;15)){
        $id_card&#x3D;idcard_15to18($id_card);
        return idcard_checksum18($id_card);
    }else{
        return false;
    }
}
function idcard_verify_number($idcard_base){
    if(strlen($idcard_base)!&#x3D;17){
        return false;
    }
    $factor&#x3D;array(7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2);
    $verify_number_list&#x3D;array(&#39;1&#39;,&#39;0&#39;,&#39;X&#39;,&#39;9&#39;,&#39;8&#39;,&#39;7&#39;,&#39;6&#39;,&#39;5&#39;,&#39;4&#39;,&#39;3&#39;,&#39;2&#39;);
    $checksum&#x3D;0;
    for($i&#x3D;0;$i&lt;strlen($idcard_base);$i++){
        $checksum +&#x3D; substr($idcard_base,$i,1) * $factor[$i];
    }
    $mod&#x3D;$checksum % 11;
    $verify_number&#x3D;$verify_number_list[$mod];
    return $verify_number;
}
function idcard_15to18($idcard){
    if(strlen($idcard)!&#x3D;15){
        return false;
    }else{
        if(array_search(substr($idcard,12,3),array(&#39;996&#39;,&#39;997&#39;,&#39;998&#39;,&#39;999&#39;)) !&#x3D;&#x3D; false){
            $idcard&#x3D;substr($idcard,0,6).&#39;18&#39;.substr($idcard,6,9);
        }else{
            $idcard&#x3D;substr($idcard,0,6).&#39;19&#39;.substr($idcard,6,9);
        }
    }
    $idcard&#x3D;$idcard.idcard_verify_number($idcard);
    return $idcard;
}
function idcard_checksum18($idcard){
    if(strlen($idcard)!&#x3D;18){
        return false;
    }
    $idcard_base&#x3D;substr($idcard,0,17);
    if(idcard_verify_number($idcard_base)!&#x3D;strtoupper(substr($idcard,17,1))){
        return false;
    }else{
        return true;
    }
}

$st &#x3D; microtime(true);
for($x &#x3D; 0; $x &lt; 100000; $x++) {
    validation_filter_id_card(&#39;自己上网找&#39;);
}
var_dump(microtime(true) - $st);</code></pre><p>100w次执行下，原生的PHP执行时间:  </p>
<pre><code>double(4.6601610183716)</code></pre><p>hhvm执行时间:  </p>
<pre><code>float(0.31694412231445)</code></pre><p>差距到这个程度，似乎已经不需要在做更多组测试了...</p>
<p>在另外一组测试中，（这里就不贴了），使用的是校验IMEI的函数，对比测试了原生php，zephir，hhvm三者的效果。结果是在100w次执行下hhvm约是原生php的10倍，zephir约是php的6-7倍。  </p>
<p>没错当时老夫就吓尿了，比zephir还要快，当然可能zephir是受到了php的影响，调用100w次zephir的函数，可能对于php影响也不小，不过这个只是老夫的猜测。  </p>
<p>如果有有缘人能看到这篇文章-_-|||。可以把上面的函数用zephir重写一遍然后在php里调用100w次看下效果...  </p>
<p>P.S. zephir真难写，vim插件都找不到  </p>
<p>P.S.S. 据说hhvm在百度推广的很好...  </p>
<p>P.S.S.S. HHVM还不支持PHP扩展，真蛋疼...  </p>
<p>P.S.S.S.S. 其实在用python的时候就有使用pypy，但是pypy对于json支持太水，老夫又是json大户，再加上有个python3在后面，实在用不下去。</p>
<p><a href="http://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF">关于JIT的技术</a>  </p>
<p>以上是鄙人的简单测试结果。  </p>
<p>以下是一些关于HHVM的说明和比较等的文章。  </p>
<p><a href="http://wuduoyi.com/note/hhvm/">HHVM 是如何提升 PHP 性能的？</a>  </p>
<p><a href="http://simonholywell.com/post/2014/02/hhvm-vs-zephir-vs-php-the-showdown.html">HHVM vs Zephir vs PHP: The showdown</a>  </p>
<p><a href="http://simonholywell.com/static/files/2014-02-28/index.html">HHVM vs Zephir vs PHP</a></p>
<p>至此，简单的测试完毕。因为目前HHVM不支持PHP扩展，但是我对PHP扩展依赖性太高，所以暂时可能还无法使用HHVM，不过以Facebook的决心和目前HHVM的质量来看，应该会有许多扩展很快兼容到HHVM上。</p>
]]></description><link>http:/ruibo.me/posts/268757288.html</link><guid isPermaLink="true">http:/ruibo.me/posts/268757288.html</guid><dc:creator><![CDATA[Huangsir]]></dc:creator><pubDate>Thu, 26 Oct 2017 13:21:39 GMT</pubDate></item><item><title><![CDATA[第一次Hackday活动]]></title><description><![CDATA[<hr>
<p>datetime: 2014-03-20 23:44:53</p>
<hr>
<p>持续两天的公司内部Hackday终于结束了。一共8只队伍，两天时间，只有3个最后有成品演示。</p>
<p>看着这些新同学的作业，忽然想起自己在学校时的样子，泪流满面。即使我再怎么伪装，也已经不再年轻了。</p>
<p>说说对这次hackday的看法。 题材是：促进提升团队效率的工具。</p>
<p>8组队伍，有4组是坐gitlab的扩展货插件，1个组做网页聊天工具，1组做留言板，1组做订餐，1组做考勤分析（我们组）。 为啥有这么多组做gitlab的插件，可能是因为大家的工作都是以gitlab为主。在使用的过程中积累了不少改进的idea。加之小涛公开了gitlab的api权限和数据库权限。所以大家一拥而上做gitlab。</p>
<p>做gitlab扩展的基本都是将gitlab移植到手机App上，微信上，网页上，Chrome扩展上等等。</p>
<p>最后获得冠军的江哥，只将gitlab的Issue Assign功能移植到了Android上，并增加了“Issue不合格打回重写”的功能，因为功能点少，终于能在两天时间内完成，博得大家的好评，最后拿了冠军。</p>
<p>剩下的几个组基本上不是讲ppt就是讲demo图，画得再好也没有用，一点挑战性都没有。唯一还有像样成品的肥叔组，将gitlab移植到了微信上。但是因为我们gitlab的https证书是非法的，导致微信公共账号无法使用，最后变成了一个手机网页版的gitlab。那我还何必跑微信上再登陆一遍~~</p>
<p>留言板组的罗神，自己先写了一个MVC框架，然后再用这个MVC框架来坐开发，搞笑呢~~</p>
<p>剩下的一些什么网页聊天，什么Issue手机版，都只有一个原型图，几乎是出于不可用状态。gitlab的Chrome插件也是bug连连，我们左等右等也一直无法一窥真容。</p>
<p>那个订餐系统，标准的课程作业式，什么预览、添加、删除、登陆系统，简直无法吐槽下去了。</p>
<p>其实可以提升团队效率的东西真的很多，我们其实也已经有很多已经堆积下来的原本就是为了提升团队效率而提的Issue。与其把gitlab做到手机上浏览器插件上微信上这些没人看的地方。</p>
<p>为什么不把公司内部的sso做了?吾等一直在苦等一个整合所有后台登陆的登陆和sso。</p>
<p>为什么不把导出数据的后台做了？做好这个不知能解放多少运营妹纸的工作效率。</p>
<p>为什么不把电子化请假做了？我们每次请假都要花费一张A4纸最后只写不超过10个字。</p>
<p>如果你们没有Idea，可以来找我和剑浩学长啊，大把Issue在这里。</p>
<p>说说我们组，考勤数据分析的工具。</p>
<p>首先，因为只有两天时间，所以我的要求是：</p>
<p>1、东西一定要简单，如果是做一个网页，最好只有一个到两个页面，产品一定要简单粗暴易用。</p>
<p>2、这个东西我希望不是用来考试的，我希望真的用用户在使用着我们的产品。</p>
<p>最开始，我们的Idea也是做一个订餐的工具，目的是为了解放综合部的生产力。为什么不做gitlab？为什么要做？这么多人都在做gitlab，哪里还敢做，丫的十一敢去丽江么？回到正题，在跟煜哥了解后，他认为不应该做这样一个东西，虽然有用，但是大家应该多出去走动，不要老是憋在公司里。所以第一个Idea作废。</p>
<p>之后福海等想做一个测试机管理的平台。大概是大家将自己手头的测试机上报到平台上，其他人如果需要测试机，就去这个平台上查在谁手上。这个Idea做来玩玩可以。但是设计的初衷就违背了现实规律（实际上基本上gitlab系列产品都违背了），就是只有当人们需要测试机时，才会去这个平台上找，而当大家得到测试机时，其实是没有意识要上去更新状态的。如果大家没有上去更新状态，那么这个平台的数据就是没有用的，然后也就不会再有用户使用。所以第二个Idea作废。</p>
<p>然后嘉豪等又想做一个图书分享的平台sharebook，大概就是大家把自己手头的书放上去分享给其他人看。这个Idea看起来很好，但是作为曾经的图书管理员，我依旧不看好这个Idea。这个Idea的反驳是一个比较困难的过程，我自己也没有特别有力的理论来反驳他们。我们有一个交互流程和sharebook很详细的平台——小涛的shareboard。而老夫认为shareboard本身的经营情况并不是特别理想，经常作者自己都忘记要有意识要经常上去维护内容以保证人气。shareboard只是一个像《善用佳软》一样分享工具的平台就已经如此难以经营。受“好东西自己独享”观念影响的sharebook肯定更难维护。所以经过艰难的反驳，sharebook被反驳掉了。</p>
<p>我看大家对坐share类的产品很又兴趣，遍提出做一个100元能够大幅度提升生活质量/b格的商品的分享站。这个网站的功能和sharebook几乎一模一样，但不同点是用户只需要分享链接即可。在低成本下“好东西自己独享”的状态不会对其影响太大。而且我们现在有专业的电商团队支持，可以由电商团队来做内容维护者。但福海和嘉豪都认为这个跟提升团队效率没啥关系，所以最后也跪了。</p>
<p>最后，不知是谁跟丽梅了解到了这个考勤的需求。大约是考勤系统太复杂，她们不会使用。所以做月度考勤的时候，需要对着考勤机的数据（一次打卡一行记录）来制作每个人每个月的考勤记录表格。我看了下最终版表格，于考勤机给的数据格式相差甚远，要手动转换十分之累人，并且效率极低，对于一个IT公司来讲，我认为在一个IT公司里出现这样低效率高重复的操作是不可容忍的。所以就出现了分析月度考勤的这样一工具。在获得了两个月的考勤记录后，我们变按照最终表格的样式对考勤机的数据进行汇总。期间我也找了她们详细了解了各种规则，极限情况，特殊情况和hr的操作流程等。</p>
<p>最后一天下午在完成全部开发工作后，也让hr老大来尝试使用了一下我们的系统，提出改进的方案等。虽然她一直说很好很好=。=#也没有提什么改进意见。</p>
<p>最后的结果，我们获得了第三名，最然不及前两组，但是我认为，我们组的产品才是最棒的。用一个忘了是在哪看到的话：一个产品的是不是做得好，唯一的标准就是潜在的使用人群里，有多少人在使用你的产品。</p>
<p>其他7组的产品在过了今夜后还会不会有人用我不知道，但是我知道，我们组的产品会一直服务综合部直到不可再用的状态，并会在未来一段时间内解放综合部的生产力，让她们能够有更多的时间在提升公司福利上。</p>
<p>最后，令我略为不满的是，在Hackday开始前，我和小涛一再强调产品需求要精简，时间只有两天，我们要看的是成品不是样品，但是许多参加过上次Hackday的老同学依然是设计了“异常宏伟”的产品。而在公司实习了很久的一些新同学也还是依旧沉浸在理想的学术环境中，最后做出来的不是课程设计就是ppt。好吧，也许也只是我因为没拿到键盘而抱怨牢骚。</p>
]]></description><link>http:/ruibo.me/posts/268329899.html</link><guid isPermaLink="true">http:/ruibo.me/posts/268329899.html</guid><dc:creator><![CDATA[Huangsir]]></dc:creator><pubDate>Thu, 26 Oct 2017 13:22:01 GMT</pubDate></item></channel></rss>